import React, { useEffect, useState, useRef } from "react";
import {Container,ButtonP, ButtonN,IMG, SliderContainer } from './sliderElements';
import './sliderEle.css';


import img1 from '../../images/slider1.png';
import img2 from '../../images/slider2.png';
import img3 from '../../images/slider3.png';
import img4 from '../../images/slider4.png';
import img5 from '../../images/slider5.png';


function Slider() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const slideRef = useRef(null);
  
  const TOTAL_SLIDES = 4;
  const image = [
    {
      src : img1,
      title: "Welcome to Minter!",
      para: "Minter is the dApp for OKS holders. If you've never used Minter before, read through our quick introduction first."
    },
    {
      src : img2, 
      title: "What is Oikos?",
      para: "Oikos is a decentralised synthetic asset issuance protocol built on Binance Smart Chain. These synthetic assets (Synths) are created by staking the Oikos Network Token (OKS), and these Synths can be exchanged for each other directly with the Oikos smart contracts on Oikos.Exchange."
    },
    {
      src : img3, 
      title: "Why stake OKS?",
      para: "OKS stakers receive two kinds of rewards. Firstly, they receive OKS staking rewards, which are created through the inflationary monetary policy. Secondly, there’s Synth exchange rewards, which are generated by Synth trades on Oikos.Exchange."
    },
    {
      src : img4, title: "What do OKS stakers need to do?",
      para: "All Synths need to be backed by staked OKS at a Collateralisation Ratio of 750%. OKS stakers need to manage their own ratio to be above this figure, which they can do by burning Synths to increase their ratio or minting Synths to reduce it. If they do this, they can collect weekly rewards."
    },
    {
      src : img5, title: "What are the risks?",
      para: "All OKS stakers create a ‘debt’ when they stake. Their debt begins as the amount of oUSD they initially mint, and fluctuates according to gains or losses made by other Synth holders. Any time anyone holds a Synth that appreciates in value, that gain is distributed proportionally between all the staked OKS holders’ debts. A staker must pay off their debt before they can unlock their staked OKS."
    }
  ];
  

  const nextSlide = () => {
      if (currentSlide >= TOTAL_SLIDES) { 
        setCurrentSlide(0);
      } else {
        setCurrentSlide(currentSlide + 1);
      }
    };

  const prevSlide = () => {
    if (currentSlide === 0) {
      setCurrentSlide(TOTAL_SLIDES);
    } else {
      setCurrentSlide(currentSlide - 1);
    }
  };

  useEffect(() => {
    slideRef.current.style.transition = "all 0.5s ease-in-out";
    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`; 
    
  }, [currentSlide]);

 

return (
  
  <Container>
  
  <SliderContainer ref={slideRef}>
  
  {image.map(image => (
    <div>
      <h1 className="title">{image.title}</h1>
      <p className="para">{image.para}</p>
      <IMG src={image.src} key={image} />
      
    </div>
  ))}
  </SliderContainer>
    
  <div class="dot-container">
  {image.map((s,index) => {
       return (
          <span className={index === currentSlide ? "purple" : "white"} onClick={() => setCurrentSlide(index)}></span>
       )
   })}
  </div>

  <div className="combuttons">
  <ButtonP onClick={prevSlide}>
    <span className="previous"><h2>PREVIOUS</h2></span></ButtonP>
    <div class="divider"/>  
      <ButtonN onClick={nextSlide}><span className="next"><h2>NEXT</h2></span></ButtonN>
      </div>
</Container>
  );
}

export default Slider; 